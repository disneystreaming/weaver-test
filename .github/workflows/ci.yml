name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["master"]
    tags: [v*]

env:
  JAVA_OPTS: "-XX:+UseG1GC -XX:MaxMetaspaceSize=2g -Xms1g -Xmx7g -Xss2M -XX:+CMSClassUnloadingEnabled"
  JVM_OPTS: "-XX:+UseG1GC -XX:MaxMetaspaceSize=2g -Xms1g -Xmx7g -Xss2M -XX:+CMSClassUnloadingEnabled"

jobs:
  build:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [adopt@1.8]
        scalaVersion: ["2_12", "2_13", "3_0_0_RC1"]
        scalaPlatform: ["jvm", "js"]
        ceVersion: ["CE2", "CE3"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2

      - name: Cache
        uses: coursier/cache-action@v6
        with:
          extraKey: ${{matrix.ceVersion}}_${{matrix.scalaVersion}}_${{matrix.scalaPlatform}}

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Run tests
        run: sbt test_${{matrix.ceVersion}}_${{matrix.scalaVersion}}_${{matrix.scalaPlatform}}

  quality:
    name: Code quality
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2

      - name: Cache
        uses: coursier/cache-action@v6

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8

      - name: Code quality
        run: sbt "scalafmtCheckAll; scalafix --check; Test/scalafix --check"

      - name: Documentation
        run: sbt mdoc
  # publish:
  #   name: Publish Artifacts
  #   needs: [build]
  #   if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v')   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout current branch (full)
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Java and Scala
  #       uses: olafurpg/setup-scala@v10
  #       with:
  #         java-version: adopt@1.8

  #     - name: Cache
  #       uses: coursier/cache-action@v3

  #     - name: Publish ${{ github.ref }}
  #       run: sbt release
  #       env:
  #         PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  #         PGP_SECRET: ${{ secrets.PGP_SECRET }}
  #         SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  #         SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  # site:
  #   name: Publish Site
  #   needs: [build, publish]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout current branch (full)
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Java and Scala
  #       uses: olafurpg/setup-scala@v10
  #       with:
  #         java-version: adopt@1.8

  #     - name: Cache
  #       uses: coursier/cache-action@v3

  #     - name: Run mdoc
  #       run: sbt mdoc

  #     - name: Release site
  #       run: amm scripts/releaseSite.sc
